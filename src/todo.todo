INFO:
	- thunder take the file <robot>.yaml that contains the configuration of the robot
	- thunder creates <robot>_gen.h, <robot>_gen.cpp
	- thunder take thunder_robot and rename it to thunder_<robot>, changing inside the necessary. Then copy it to generatedFiles
	- thunder generates the <robot>_inertial_REG.yaml from the config file 

General:
	✔ make thunder_robot @done (3/26/2024, 4:37:58 PM)
	✔ let thunder copy robot_gen into thunder_robot folders for tests @done (3/27/2024, 4:24:18 PM)
	✔ thunder working on console @done (3/29/2024, 11:32:08 AM)
	☐ cout steps
	✔ let thunder copy thunder_robot.h/.cpp into generatedFiles folder, use function in utils @done (3/29/2024, 11:32:20 AM)
	✔ change the thunder_robot in generatedFiles like N_JOINTS or robot in <robot> @done (4/3/2024, 7:55:54 AM)
	☐ let thunder generate robot_inertial_REG and put it into folder generatedFiles
	☐ generalize path with absolute_path

Program:
	☐ 'thunder gen robot.yaml' generates a folder 'generatedFiles' and put inside
		✔ 'robot_gen.h', 'robot_gen.cpp' that are the generated library from casadi @done (3/24/2024, 9:57:11 AM)
		✔ 'thunder_robot..h', 'thunder_robot.cpp', that is the wrapper class for the casadi generated generatedFiles @done (4/3/2024, 7:56:35 AM)
		☐ 'robot_inertial_REG.yaml' that contains parameters in which the dynamics is linear
	✔ program should use the yaml file to generate everything, options can be added like 'name'... @done (4/3/2024, 7:56:50 AM)

thunder:
	☐ integrate genYAML into thunder (generate inertial_REG from thunder)
	☐ dynamic matrix derivatives
	☐ linearized system
	☐ friction
	☐ filtered regressor
	☐ command line for create_robot

thunder_robot:
	✔ load and save inertial parameters @done (4/3/2024, 7:57:43 AM)
	☐ test
