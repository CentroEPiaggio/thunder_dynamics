✔ thunder_test ok, need to change genYaml and everything that read from the config file @done (10/24/2024, 11:49:45 AM)
✔ get_transform into dynamics taken from kinematics or utils? @done (11/7/2024, 2:54:27 PM)
✔ create symb["par"] to store symbolics of parameters. @done (11/7/2024, 3:50:56 PM)
✔ change add_function da dynamics nella parte elastica in avanti @done (11/8/2024, 6:42:20 PM)
✔ symbolic functions not complete @done (11/8/2024, 6:42:46 PM)
✔ something to have arguments of parameters in casadi functions @done (11/8/2024, 6:43:02 PM)
✔ change compute functions to take model instead of private variables DHtable... @done (11/8/2024, 6:43:08 PM)
☐ change load parameters into args, where?
✔ test symbolic selectivity when there is no "symb", errors? @done (11/8/2024, 6:43:19 PM)
☐ change load and save in order to use new file structure, do not save inertial DYN, save only REG, use configFile to load, write next instructions in improvings
✔ load symbolic selectivity from config_file @done (11/8/2024, 6:43:30 PM)
☐ in Robot(config) usa i parametri salvati e i simbolici per costruire il robot.
☐ load_par is old, need to change the structure as genYaml
✔ dynamics in config @done (10/24/2024, 11:53:13 AM)
✔ symbolic flags in Config @done (10/24/2024, 11:53:17 AM)
☐ substitute values in parameters before computing functions

improvings:
	☐ frameOffset into utils.spatial and generic wrt robot and thunder_robot
	☐ delet par_REG from model
	☐ add integrity checks and validity of robot
	☐ change get_transform
	☐ check for jacobian error
	☐ new file structure
		☐ some parameter init is in Robot(Config), every parameter should be loaded in config and then added to args, now parameters are loaded with load
		☐ genYaml have to be into Robot, now is used to create parameter file from config_file
		☐ there is no save for parameters into Robot
		☐ create save_parameters and use it in genYaml in fillInertialYaml
		☐ fillYaml creates the config file for the robot, used by both thunder and thunder_robot
		☐ structure that contain all parameters in robot, dynamics, kinematics and others
		☐ save_par save all parameters in a file, maybe is the config file?
		☐ save and load for both thunder and thunder_robot
		☐ use LinkProp to save all parameters?, create a structure that can be used by both Robot and thunder_robot
		☐ now parameters are loaded after the creation, load parameters from the config file in the robot creation phase
		☐ add elasticity to linkProp parameters
		☐ LinkProp have also kinematics?
		☐ improve the linkProp structure, must be general to all parameters in the map args
		☐ idea for parameters: thunder created a configuration files with everything, maybe this file can be used to create robot and by thunder_robot both.
		☐ thunder_robot can only load par_DYN and par_REG, general method needed for all the parameters
		☐ thunder_utils with LinkProp and other classes needed both by thunder and thunder_robot
		☐ FrameOffset part of linkProp? maybe into utils?
		☐ FrameOffset not so general, use T as internal transformation and provide conversions
	☐ elasticity
		☐ selection matrix for elastic joints
		☐ elastic matrices and quantities are related on motor side equation, have to be modified to use in link side equation by selection matrix
	✔ if "symb" is not present, default is not symbolic @done (11/5/2024, 6:31:16 PM)
	☐ clean symbolic selectivity
	✔ multiple robot library in the same folder @done (10/18/2024, 1:30:21 PM)
	☐ robotName in config file. Needed for creation of library without the command './thunder gen', problems in name of generated functions
	☐ insert args or model only if order>0
	☐ gravity not in base frame class
	☐ update_inertial_DYN/REG not efficient!, too many conversions eigen-casadi
	☐ generalize path with absolute_path
	☐ clean everything
	☐ create library thunder_utils that contain all that cannot be generated, best if it is useful both on thunder and thunder_robot

will be in Thunder:
	✔ elasticity @done (10/17/2024, 3:05:53 PM)
	☐ symbolic selectivity: possible to choose variables that are symbolic
	☐ better yaml file, kinematics, dynamics, elastic, ...
	☐ generalize kinematics: not DH or URDF, parameters enter directly into the Transform matrix
	☐ analytic Jacobian: choose a parametrization and provide conversions
	☐ arguments as a map, get also return arguments, function set("") imposta argomento, add_arg -> aggiunge un argomento simbolico
	☐ default conscructor of Robot
	☐ handling of different joint structure, fixed, defined by user
	☐ add map with the compute functions, and add to the map kinematics, dynamics, regressors, then add method compute that calls each compute function
	☐ initialize variable dimensions in initializer list of Robot
	☐ save_arguments or parametere more generic, all in one file, kinematics, dynamics, elastic --> <robot>_config.yaml
	☐ generate inertial_REG separately, for the use of regressor or adaptive control
	☐ load arguments or parameters, one function for everything! (load_par(file) have to load par_DYN, par_K... all automatically)
	☐ config file should be used by both robot and thunder_robot, save and load have to be the same!
	
INFO:
	- thunder take the file <robot>.yaml that contains the configuration of the robot
	- thunder creates <robot>_gen.h, <robot>_gen.cpp
	- thunder take thunder_robot and rename it to thunder_<robot>, changing inside the necessary. Then copy it to generatedFiles
	- thunder generates the <robot>_inertial_REG.yaml from the config file 
	- elastic and friction regressors implemented with jacobian

General:
	✔ Modules kinematics, dynamics, regressors @done (8/24/2024, 5:18:33 PM)
	✔ make thunder_robot @done (3/26/2024, 4:37:58 PM)
	✔ let thunder copy robot_gen into thunder_robot folders for tests @done (3/27/2024, 4:24:18 PM)
	✔ thunder working on console @done (3/29/2024, 11:32:08 AM)
	✔ let thunder copy thunder_robot.h/.cpp into generatedFiles folder, use function in utils @done (3/29/2024, 11:32:20 AM)
	✔ change the thunder_robot in generatedFiles like N_JOINTS or robot in <robot> @done (4/3/2024, 7:55:54 AM)
	✔ let thunder generate robot_inertial_REG and put it into folder generatedFiles @done (4/7/2024, 4:15:21 PM)
	☐ multithreading

Program:
	☐ 'thunder gen robot.yaml' generates a folder 'generatedFiles' and put inside
		✔ 'robot_gen.h', 'robot_gen.cpp' that are the generated library from casadi @done (3/24/2024, 9:57:11 AM)
		✔ 'thunder_robot.h', 'thunder_robot.cpp', that is the wrapper class for the casadi generated generatedFiles @done (4/3/2024, 7:56:35 AM)
		✔ 'robot_inertial_REG.yaml' that contains parameters in which the dynamics is linear @done (4/7/2024, 4:15:36 PM)
		☐ 'thunder_utils.h/cpp' that contain everything useful both on thunder and thunder_robot, and is not autogenerated
	✔ program should use the yaml file to generate everything, options can be added like 'name'... @done (4/3/2024, 7:56:50 AM)
	✔ thunder from bin @done (4/4/2024, 10:43:15 AM)
	☐ there is a copy of utils functions from urdf2dh_inertial to thunder_robot. Another way is to add another library with general methods, or to add functions on thunder_robot creation (bad). Maybe the better choice is to create a folder with all files of the library inside(thunder_robot, robot_gen, thunder_utils)
	✔ thunder copy generated files into thunder_robot project (not working for now) @done (8/27/2024, 12:41:17 PM)
	
thunder:
	☐ dynamic matrix derivatives
	☐ linearized system
	✔ friction @done (9/6/2024, 6:06:31 AM)
	☐ filtered regressor
	☐ command line for create_robot

thunder_robot:
	✔ load and save inertial parameters @done (4/3/2024, 7:57:43 AM)
	☐ manage inertial_DYN
	✔ C_regr_classic = 0.5*C_regr = 0.5*C_dyn @done (9/13/2024, 12:27:38 PM)

issues:
	☐ error on first column of jacobian? K is always [0;0;1]?
	☐ simplify some casadi expression?
	☐ test base_to_L0